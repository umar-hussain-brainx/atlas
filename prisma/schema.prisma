// This is your Prisma schema file for MongoDB
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Session {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model CustomForm {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  shop               String
  title              String
  description        String
  inputHeading       String
  submitButtonText   String
  customCss          String
  couponPrefix       String
  couponPostfix      String
  discountType       String?
  discountValue      String?
  discountId         String?    // New field
  segmentId          String?    // New field
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  formCustomers      FormCustomer[]  // Explicit relation to FormCustomer
}

model Customer {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  email             String
  shopifyCustomerId String
  shop              String
  formCustomers     FormCustomer[]  // Explicit relation to FormCustomer
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model FormCustomer {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  customForm   CustomForm @relation(fields: [customFormId], references: [id], onDelete: Cascade)  // Added onDelete: Cascade
  customFormId String     @db.ObjectId
  customer     Customer   @relation(fields: [customerId], references: [id])  
  customerId   String     @db.ObjectId
}
